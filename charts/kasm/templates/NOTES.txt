1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if .Values.global.hostname }}
  http{{ if or .Values.certificates.ingress.create .Values.certificates.ingress.existingSecret }}s{{ end }}://{{ .Values.global.hostname }}
{{- else }}
  kubectl --namespace {{ .Release.Namespace }} port-forward svc/{{ include "kasm.fullname" . }}-proxy 8080:80
  echo "Visit http://127.0.0.1:8080 to use your application"
{{- end }}

2. Kasm Workspaces has been deployed with the following components:
{{- if .Values.services.api.enabled }}
   ✓ Kasm API ({{ include "kasm.replicas" (dict "component" "api" "context" .) }} replica(s))
{{- end }}
{{- if .Values.services.manager.enabled }}
   ✓ Kasm Manager ({{ include "kasm.replicas" (dict "component" "manager" "context" .) }} replica(s))
{{- end }}
{{- if .Values.services.proxy.enabled }}
   ✓ Kasm Proxy ({{ include "kasm.replicas" (dict "component" "proxy" "context" .) }} replica(s))
{{- end }}
{{- if .Values.services.guac.enabled }}
   ✓ Guacamole Service ({{ include "kasm.replicas" (dict "component" "guac" "context" .) }} replica(s))
{{- end }}
{{- if .Values.database.deploy }}
   ✓ PostgreSQL Database (internal)
{{- else if .Values.database.external.enabled }}
   ✓ PostgreSQL Database (external: {{ .Values.database.external.host }}:{{ .Values.database.external.port }})
{{- end }}
{{- if .Values.redis.deploy }}
   ✓ Redis Cache (internal)
{{- else if .Values.redis.external.enabled }}
   ✓ Redis Cache (external: {{ .Values.redis.external.host }}:{{ .Values.redis.external.port }})
{{- end }}
{{- if .Values.services.rdpGateway.enabled }}
   ✓ RDP Gateway ({{ include "kasm.replicas" (dict "component" "rdpGateway" "context" .) }} replica(s))
{{- end }}
{{- if .Values.services.rdpHttpsGateway.enabled }}
   ✓ RDP HTTPS Gateway ({{ include "kasm.replicas" (dict "component" "rdpHttpsGateway" "context" .) }} replica(s))
{{- end }}

3. Default credentials:
   - Admin User: admin@kasm.local
   - Admin Password: {{ if .Values.passwords.adminPassword }}[Custom Password Set]{{ else }}[Auto-generated - check secret {{ include "kasm.fullname" . }}-passwords]{{ end }}
   - Standard User: user@kasm.local  
   - User Password: {{ if .Values.passwords.userPassword }}[Custom Password Set]{{ else }}[Auto-generated - check secret {{ include "kasm.fullname" . }}-passwords]{{ end }}

4. To get auto-generated passwords:
   kubectl get secret {{ include "kasm.fullname" . }}-passwords -o jsonpath="{.data.admin-password}" | base64 --decode
   kubectl get secret {{ include "kasm.fullname" . }}-passwords -o jsonpath="{.data.user-password}" | base64 --decode

5. Certificate Management:
{{- if .Values.certificates.certManager.enabled }}
   ✓ Using cert-manager with issuer: {{ .Values.certificates.certManager.issuerName }} ({{ .Values.certificates.certManager.issuerKind }})
{{- else }}
   ✓ Using {{ if .Values.certificates.ingress.certificate }}provided{{ else }}self-signed{{ end }} certificates
{{- end }}

6. Database Configuration:
{{- if .Values.database.external.enabled }}
   ✓ External database: {{ .Values.database.external.host }}:{{ .Values.database.external.port }}/{{ .Values.database.external.database }}
{{- else }}
   ✓ Internal PostgreSQL with {{ .Values.database.internal.storageSize | default "10Gi" }} storage
{{- end }}

For more information about Kasm Workspaces, visit: https://kasmweb.com