{{- if .Values.database.deploy }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kasm.fullname" . }}-db
  namespace: {{ include "kasm.namespace" . }}
  labels:
    {{- include "kasm.commonLabels" . | nindent 4 }}
    {{- include "kasm.componentLabels" "database" | nindent 4 }}
spec:
  serviceName: {{ include "kasm.fullname" . }}-db
  replicas: 1
  selector:
    matchLabels:
      {{- include "kasm.selectorLabels" . | nindent 6 }}
      kasm.app/component: database
  template:
    metadata:
      labels:
        {{- include "kasm.commonLabels" . | nindent 8 }}
        {{- include "kasm.componentLabels" "database" | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- include "kasm.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "kasm.serviceAccountName" . }}
      {{- if .Values.kasm.applyHardening }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: postgres
          {{- if .Values.kasm.applyHardening }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          image: "{{ .Values.database.internal.image.repository }}:{{ .Values.database.internal.image.tag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: "kasm"
            - name: POSTGRES_USER
              value: "kasmapp"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "kasm.fullname" . }}-database-secret
                  key: password
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: tmp
              mountPath: /tmp
            - name: var-run
              mountPath: /var/run
          {{- with .Values.database.internal.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U kasmapp -d kasm
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U kasmapp -d kasm
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-run
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
        labels:
          {{- include "kasm.commonLabels" . | nindent 10 }}
          {{- include "kasm.componentLabels" "database" | nindent 10 }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.database.internal.storageClassName }}
        storageClassName: {{ .Values.database.internal.storageClassName | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.database.internal.storageSize | default "10Gi" }}
  {{- if .Values.database.internal.persistentVolumeClaimRetentionPolicy.enabled }}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: {{ .Values.database.internal.persistentVolumeClaimRetentionPolicy.whenDeleted | default "Retain" }}
    whenScaled: {{ .Values.database.internal.persistentVolumeClaimRetentionPolicy.whenScaled | default "Retain" }}
  {{- end }}
{{- end }}
