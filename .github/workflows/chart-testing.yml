name: Chart Testing

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch target branch
        run: |
          git fetch origin ${{ github.event.repository.default_branch }}:${{ github.event.repository.default_branch }} || true

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Install chart-testing dependencies
        run: |
          pip install yamale

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Add Helm repositories (if needed)
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Run chart-testing (list)
        id: list
        run: |
          # If we're on main branch, test all charts
          if [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "Running on main branch - testing all charts"
          else
            # Check for changed charts
            changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} 2>/dev/null || echo "")
            if [[ -n "$changed" ]]; then
              echo "changed=true" >> "$GITHUB_OUTPUT"
              echo "Charts changed: $changed"
            else
              echo "No charts changed"
              # Fallback: if we can't detect changes, test anyway for safety
              echo "changed=true" >> "$GITHUB_OUTPUT"
              echo "Fallback: testing charts due to detection uncertainty"
            fi
          fi

      - name: Run chart-testing (lint)
        if: steps.list.outputs.changed == 'true'
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            # Lint all charts when on main branch
            ct lint --all --validate-maintainers=false
          else
            # Lint changed charts
            ct lint --target-branch ${{ github.event.repository.default_branch }} --validate-maintainers=false || ct lint --all --validate-maintainers=false
          fi

      - name: Create kind cluster
        if: steps.list.outputs.changed == 'true'
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: chart-testing
          config: |
            kind: Cluster
            apiVersion: kind.x-k8s.io/v1alpha4
            nodes:
            - role: control-plane
              kubeadmConfigPatches:
              - |
                kind: InitConfiguration
                nodeRegistration:
                  kubeletExtraArgs:
                    node-labels: "ingress-ready=true"
              extraPortMappings:
              - containerPort: 80
                hostPort: 80
                protocol: TCP
              - containerPort: 443
                hostPort: 443
                protocol: TCP

      - name: Run chart-testing (install)
        if: steps.list.outputs.changed == 'true'
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            # Install all charts when on main branch
            ct install --all --helm-extra-set-args "--timeout=600s" --validate-maintainers=false
          else
            # Install changed charts
            ct install --target-branch ${{ github.event.repository.default_branch }} --helm-extra-set-args "--timeout=600s" --validate-maintainers=false || ct install --all --helm-extra-set-args "--timeout=600s" --validate-maintainers=false
          fi

  helm-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run helm-docs
        uses: docker://jnorwood/helm-docs:latest
        with:
          args: --chart-search-root=charts

      - name: Check for changes
        run: |
          if git diff --exit-code; then
            echo "Documentation is up to date"
          else
            echo "Documentation is out of date. Please run helm-docs and commit the changes."
            exit 1
          fi
